import os
import sys
import asyncio
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from app.database import requests as rq
from app.database.models import async_session, Bot_data

async def create_session(bot_id):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –∏–∑ –ë–î
    async with async_session() as session:
        bot_data = await rq.get_bot_data_by_id(bot_id)
        
        if not bot_data:
            print(f"‚ùå –ë–æ—Ç —Å ID {bot_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
            
        print(f"‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã: API_ID={bot_data.api_id}")
        
        phone = input("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä +7xxxxxxxxxx): ")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É sessions –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs("sessions", exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ë–î
        client = TelegramClient(
            f"sessions/session_{bot_id}_{bot_data.api_id}",
            bot_data.api_id,
            bot_data.hash_id
        )
        
        await client.connect()

        if not await client.is_user_authorized():
            await client.send_code_request(phone)
            code = input("üîë –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: ")

            try:
                await client.sign_in(phone, code)
            except SessionPasswordNeededError:
                password = input("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA: ")
                await client.sign_in(password=password)

        print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        await client.disconnect()

def show_usage():
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print(f"python {os.path.basename(__file__)} <bot_id>")
    print("–ü—Ä–∏–º–µ—Ä:")
    print(f"python {os.path.basename(__file__)} 123")

async def main():
    if len(sys.argv) != 2:
        show_usage()
        return
        
    try:
        bot_id = int(sys.argv[1])
        await create_session(bot_id)
    except ValueError:
        print("‚ùå ID –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        show_usage()

if __name__ == "__main__":
    asyncio.run(main())
