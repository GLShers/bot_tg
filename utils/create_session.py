import os
import sys
import asyncio
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError, FloodWaitError

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from app.database import requests as rq
from app.database.models import async_session, Bot_data

async def create_bot_session(bot_id):
    """
    –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –±–æ—Ç–∞ –ø–æ –µ–≥–æ ID
    """
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –±–æ—Ç–∞ —Å ID: {bot_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    async with async_session() as session:
        bot_data = await rq.get_bot_data_by_id(bot_id)
        
        if not bot_data:
            print(f"‚ùå –ë–æ—Ç —Å ID {bot_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        print(f"‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã: API_ID={bot_data.api_id}, —Å—Å—ã–ª–∫–∞={bot_data.link_bot}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–µ—Å—Å–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        sessions_dir = "sessions"
        os.makedirs(sessions_dir, exist_ok=True)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Å–µ—Å—Å–∏–∏ –∏ –ø—É—Ç—å
        session_name = f"session_{bot_id}_{bot_data.api_id}"
        session_path = os.path.join(sessions_dir, session_name)
        
        print(f"‚ÑπÔ∏è –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_name}.session")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramClient(
            session_path,
            bot_data.api_id,
            bot_data.hash_id
        )
        
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
            print("‚ÑπÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
            await client.connect()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            if await client.is_user_authorized():
                print(f"‚úÖ –°–µ—Å—Å–∏—è —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
                me = await client.get_me()
                print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} (ID: {me.id})")
                return True
            
            print("‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞. –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            phone = input("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä +7xxxxxxxxxx): ")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            await client.send_code_request(phone)
            code = input("üîë –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ Telegram: ")
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é –∫–æ–¥–∞
                await client.sign_in(phone, code)
            except SessionPasswordNeededError:
                # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –∑–∞—â–∏—â–µ–Ω –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
                password = input("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ")
                await client.sign_in(password=password)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å
            if await client.is_user_authorized():
                me = await client.get_me()
                print(f"‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} (ID: {me.id})")
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
                return False
                
        except FloodWaitError as e:
            print(f"‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {e.seconds} —Å–µ–∫—É–Ω–¥")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {str(e)}")
            return False
        finally:
            await client.disconnect()
            print("‚ÑπÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Telegram")

def show_usage():
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print(f"python {os.path.basename(__file__)} <bot_id>")
    print("–ü—Ä–∏–º–µ—Ä:")
    print(f"python {os.path.basename(__file__)} 123")

async def main():
    if len(sys.argv) != 2:
        show_usage()
        return
        
    try:
        bot_id = int(sys.argv[1])
        await create_bot_session(bot_id)
    except ValueError:
        print("‚ùå ID –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        show_usage()

if __name__ == "__main__":
    asyncio.run(main()) 