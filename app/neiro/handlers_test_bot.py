import random
import asyncio
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from g4f.client import Client
import app.keyboards as kb
import app.database.requests as rq
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import g4f 

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
nero_test_router = Router()

# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM
class Rega(StatesGroup):
    waait = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
def generate_prompt(post_text, media_type=None):
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –º–µ–¥–∏–∞, –µ—Å–ª–∏ –ø–æ—Å—Ç –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
    if media_type:
        prompt = (
            f"–¢—ã –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –∂–∏–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. "
            f"–†–µ–∞–≥–∏—Ä—É–π –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ, —Å —Å–µ—Ç–µ–≤—ã–º —Å–ª–µ–Ω–≥–æ–º, –∏—Ä–æ–Ω–∏–µ–π, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥–∏–±–æ–≤. "
            f"–¢–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫, –±—É–¥—Ç–æ –µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª–∞ –¥–µ–≤—É—à–∫–∞. "
            f"–ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ-–¥–≤–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≤—ã–≤–æ–¥–æ–≤. –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤—ã–≥–ª—è–¥–µ–ª —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ –µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª —á–µ–ª–æ–≤–µ–∫. "
            f"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–π—Å—è –∏ –Ω–µ –ø–∏—à–∏ –≤ —Å—Ç–∏–ª–µ AI. –ù–∏–∫–∞–∫–∏—Ö '–ö–∞–∫ –∂–µ–Ω—â–∏–Ω–∞, —è —Å—á–∏—Ç–∞—é...' –∏–ª–∏ '–° –∂–µ–Ω—Å–∫–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è'. –ü–∏—à–∏ —Å—Ä–∞–∑—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. "
            f"---\n{post_text}\n–≠—Ç–æ –ø–æ—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π {media_type} –±–µ–∑ —Ç–µ–∫—Å—Ç–∞. –ù–∞–ø–∏—à–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ—Å—Ç–µ–Ω –¥–ª—è –ø–æ—Å—Ç–∞ —Å {media_type}.\n---\n"
            f"–ù–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è. –ï—Å–ª–∏ –ø–æ—Å—Ç –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –Ω–∞—Ä–∫–æ—Ç–∏–∫–∞–º–∏, –æ—Ä—É–∂–∏–µ–º, –ø–æ–ª–∏—Ç–∏–∫–æ–π, –Ω–∞—Å–∏–ª–∏–µ–º, –≤–æ–π–Ω–æ–π, –£–∫—Ä–∞–∏–Ω–æ–π, —Ç–æ —Ç—ã –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤–∏—à—å —Ç—Ä–∏ —Ç–æ—á–∫–∏ –∏ –≤—Å–µ!"
        )
    else:
        prompt = (
            f"–¢—ã –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –∂–∏–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. "
            f"–†–µ–∞–≥–∏—Ä—É–π –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ, —Å —Å–µ—Ç–µ–≤—ã–º —Å–ª–µ–Ω–≥–æ–º, –∏—Ä–æ–Ω–∏–µ–π, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥–∏–±–æ–≤. "
            f"–¢–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫, –±—É–¥—Ç–æ –µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª–∞ –¥–µ–≤—É—à–∫–∞. "
            f"–ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ-–¥–≤–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≤—ã–≤–æ–¥–æ–≤. –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤—ã–≥–ª—è–¥–µ–ª —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ –µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª —á–µ–ª–æ–≤–µ–∫. "
            f"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–π—Å—è –∏ –Ω–µ –ø–∏—à–∏ –≤ —Å—Ç–∏–ª–µ AI. –ù–∏–∫–∞–∫–∏—Ö '–ö–∞–∫ –∂–µ–Ω—â–∏–Ω–∞, —è —Å—á–∏—Ç–∞—é...' –∏–ª–∏ '–° –∂–µ–Ω—Å–∫–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è'. –ü–∏—à–∏ —Å—Ä–∞–∑—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. "
            f"---\n{post_text}\n---\n–ù–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è. –ï—Å–ª–∏ –ø–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –Ω–∞—Ä–∫–æ—Ç–∏–∫–∞–º–∏, –æ—Ä—É–∂–∏–µ–º, –ø–æ–ª–∏—Ç–∏–∫–æ–π, –Ω–∞—Å–∏–ª–∏–µ–º, –≤–æ–π–Ω–æ–π, –£–∫—Ä–∞–∏–Ω–æ–π, —Ç–æ —Ç—ã –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤–∏—à—å —Ç—Ä–∏ —Ç–æ—á–∫–∏ –∏ –≤—Å–µ!"
        )
    return prompt

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /run_bot
@nero_test_router.callback_query(F.data.startswith("test"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "<b>üîç –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞</b>\n\n"
        "–°–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–º–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.\n\n"
        "<b>üì± –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        "1Ô∏è‚É£ –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –ø–æ—Å—Ç –∏–∑ –ª—é–±–æ–≥–æ –∫–∞–Ω–∞–ª–∞\n"
        "2Ô∏è‚É£ –ù–∞—à–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\n"
        "3Ô∏è‚É£ –í—ã —É–≤–∏–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–æ—Ç\n\n"
        "<i>–ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –ª—é–±–æ–π –ø–æ—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–±–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è</i>",
        parse_mode="HTML", 
        reply_markup=kb.main_button()
    )
    await state.set_state(Rega.waait)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@nero_test_router.message(Rega.waait)
async def process_link(message: Message, state: FSMContext):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    status_message = await message.answer(
        "<b>‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...</b>",
        parse_mode="HTML"
    )
    
    user = await rq.get_user_data(message.from_user.id)

    if not user:
        await status_message.edit_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return
    
    description_chanel = user.my_chanel_description if hasattr(user, 'my_chanel_description') else None
    
    if not description_chanel:
        await status_message.edit_text(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ."
        )
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    post_test = ""
    media_type = None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.forward_from or message.forward_from_chat:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
        if message.text:
            post_test = message.text
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫ –º–µ–¥–∏–∞
        elif message.caption:
            post_test = message.caption
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –º–µ–¥–∏–∞ –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞
        elif message.photo:
            media_type = "—Ñ–æ—Ç–æ"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.video:
            media_type = "–≤–∏–¥–µ–æ"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∏–¥–µ–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.voice or message.audio:
            media_type = "–∞—É–¥–∏–æ"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.document:
            media_type = "—Ñ–∞–π–ª"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.animation:
            media_type = "GIF/–∞–Ω–∏–º–∞—Ü–∏—è"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç GIF-–∞–Ω–∏–º–∞—Ü–∏—é –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.sticker:
            media_type = "—Å—Ç–∏–∫–µ—Ä"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∏–∫–µ—Ä]"
        else:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
            media_type = "–º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç"
            post_test = f"[–ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ, –ø—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞
        if message.text:
            post_test = message.text
        elif message.caption:
            post_test = message.caption
        elif message.photo:
            media_type = "—Ñ–æ—Ç–æ"
            post_test = f"[–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.video:
            media_type = "–≤–∏–¥–µ–æ"
            post_test = f"[–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∏–¥–µ–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        elif message.voice or message.audio:
            media_type = "–∞—É–¥–∏–æ"
            post_test = f"[–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—É–¥–∏–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"
        else:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
            media_type = "–º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç"
            post_test = f"[–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"

    if len(post_test) > 1500:
        await status_message.edit_text(
            "‚ùå –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç!\n\n"
            "–í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –¥–æ 1500 —Å–∏–º–≤–æ–ª–æ–≤."
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –º–µ–¥–∏–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
    if media_type:
        await status_message.edit_text(
            f"<b>üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å—Ç–∞ —Å {media_type}...</b>\n\n"
            f"–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
            parse_mode="HTML"
        )
    else:
        await status_message.edit_text(
            "<b>üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ...</b>\n\n"
            "–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
            parse_mode="HTML"
        )
    
    prompt = generate_prompt(post_test, media_type)

    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –∫ GPT
        await asyncio.sleep(1.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –æ—â—É—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        await status_message.edit_text(
            "<b>‚ú® –°–æ–∑–¥–∞—é –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...</b>",
            parse_mode="HTML"
        )
        
        response = await g4f.ChatCompletion.create_async(
            model="deepseek-v3",
            messages=[
                {"role": "system", "content": "You are a business man."},
                {"role": "user", "content": prompt}
            ]
        )
        
        print("–û—Ç–≤–µ—Ç GPT:", response)

        comment = response if isinstance(response, str) else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞."

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        await status_message.edit_text(
            f"<b>‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–º–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:</b>\n\n"
            f"<i>\"{comment}\"</i>",
            parse_mode="HTML"
        )

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        await message.answer(
            "üî• <b>–í–ø–µ—á–∞—Ç–ª—è–µ—Ç, –ø—Ä–∞–≤–¥–∞?</b>\n\n"
            "–≠—Ç–æ –ª–∏—à—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞. –° –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π –±–æ—Ç –±—É–¥–µ—Ç:\n\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã 24/7\n"
            "‚Ä¢ –°–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å —É—á–µ—Ç–æ–º —Ç–µ–º–∞—Ç–∏–∫–∏\n"
            "‚Ä¢ –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ö –æ—Ç –∏–º–µ–Ω–∏ –Ω–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –≤–∞—à–µ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª\n"
            "‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª\n\n"
            "<b>üíé –û–¥–∏–Ω –±–æ—Ç –∑–∞–º–µ–Ω—è–µ—Ç —Ü–µ–ª—É—é –∫–æ–º–∞–Ω–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤!</b>",
            parse_mode="HTML",
            reply_markup=kb.subscription_offer_keyboard()
        )

    except Exception as e:
        await status_message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
        
    finally:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()