from aiogram import Bot, F, Router
from aiogram.types import Message, FSInputFile, CallbackQuery, BotCommand, BotCommandScopeDefault, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command, StateFilter, CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import app.database.requests as rq
import app.keyboards as kb
import os
import time
from contextlib import suppress
from typing import Union
import asyncio
import datetime
from datetime import timedelta
from aiogram.exceptions import TelegramBadRequest
import os
from aiogram.types import FSInputFile
from typing import Union

from app.database import requests as rq
import app.keyboards as kb

from aiogram.fsm.state import State, StatesGroup

class Reg(StatesGroup):
    home = State()
    name = State()
    phone = State()
    waiting_link = State()
    waiting_add = State()

class EditChannelState(StatesGroup):    
    waiting_for_new_link = State()
    chanel_wait = State()
    des_chanel_wait = State()
    des_profile_wait = State()
    waiting_tg_id = State()
    waiting_for_channel_description = State()
    waiting_for_profile_description = State()
    waiting_for_link_update = State()

class Step(StatesGroup):
    des_profile = State()
    des_chanel = State()   
    link = State()
    wait_style = State()
    style = State()
    all_ready = State()
    add_chanels = State()
    slep = State()
    period_com = State()
    sleep_bot = State()
    sleep_sleep = State()
    launch_bot = State()
    all_ready_go = State() 


    
router = Router()




#‚Å°‚Å¢‚Å£‚Å¢----------------------------------------------------------------------------------------–°–¢–ê–†–¢–û–í–´–ï-–ö–û–ú–ê–ù–î–´-------------------------------------------------------------------------------------------------‚Å°
@router.message(CommandStart())
async def com_start(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await rq.set_user(message.from_user.id)
    await rq.set_login(message.from_user.id, message.from_user.username)
    user = await rq.get_user_data(message.from_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –±–∞–∑–æ–≤–∞—è
    if user.sub_id != 1 and user.date_sub:
        now = datetime.datetime.now()
        days_left = (user.date_sub - now).days
        
        # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 3 –¥–Ω–µ–π, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if 0 <= days_left <= 3:
            await message.answer(
                f"<b>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è</b>\n\n"
                f"–î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å <b>{days_left} {'–¥–Ω–µ–π' if days_left > 1 else '–¥–µ–Ω—å'}</b>.\n"
                f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞, "
                f"—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∑–∞—Ä–∞–Ω–µ–µ.",
                parse_mode="HTML",
                reply_markup=kb.subscription_renewal_keyboard()
            )
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å, —É–≤–µ–¥–æ–º–ª—è–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –±–∞–∑–æ–≤—É—é
        elif days_left < 0:
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –±–∞–∑–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
            await rq.reset_to_basic_subscription(message.from_user.id)
            await message.answer(
                "<b>‚ùå –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å</b>\n\n"
                "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞, "
                "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.",
                parse_mode="HTML",
                reply_markup=kb.subscription_renewal_keyboard()
            )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
    is_profile_fully_filled = user.link and user.my_chanel_description and user.my_profile_description
    
    if is_profile_fully_filled:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        if user.sub_id != 1:  # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ (–Ω–µ –±–∞–∑–æ–≤–∞—è)
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
            subscription = await rq.get_sub(message.from_user.id)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            channels = await rq.get_chanels(message.from_user.id)
            channel_count = len(channels) if channels else 0
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
            days_left = 0
            if user.date_sub:
                now = datetime.datetime.now()
                delta = user.date_sub - now
                days_left = max(0, delta.days)  # –ï—Å–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ, –∑–Ω–∞—á–∏—Ç –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–ø–∏—Å–∫–µ
            subscription_text = (
                f"<b>üöÄ –¶–ï–ù–¢–† –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ï–ô–†–û–ö–û–ú–ú–ï–ù–¢–ò–ù–ì–û–ú</b>\n\n"
                f"<b>üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!</b>\n\n"
                f"<b>üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–ê–®–ï–ô –ü–û–î–ü–ò–°–ö–ï:</b>\n"
                f"‚Ä¢ üíé –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω: {subscription.sub_name}\n"
                f"‚Ä¢ ‚è±Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}\n"
                f"‚Ä¢ üì∫ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {channel_count}/{subscription.max_chanels}\n"
                f"‚Ä¢ üîÑ –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤: {max(0, subscription.max_chanels - channel_count)}\n\n"
                f"<b>üî• –í–ê–®–ò –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:</b>\n"
                f"‚Ä¢ üíπ –ù–µ –Ω—É–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç—ã\n"
                f"‚Ä¢ üß† –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–æ–≤\n"
                f"‚Ä¢ üõ°Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫\n"
                f"‚Ä¢ üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
                f"<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∂–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º</i>"
            )
            await message.answer(
                subscription_text,
                parse_mode="HTML",
                reply_markup=kb.home_page()
            )
            return
        
        # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        welcome_text = (
            f"<b>üöÄ –¶–ï–ù–¢–† –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ï–ô–†–û–ö–û–ú–ú–ï–ù–¢–ò–ù–ì–û–ú</b>\n\n"
            f"<b>üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!</b>\n\n"
            f"<b>üìä –ú–ì–ù–û–í–ï–ù–ù–´–ô –î–û–°–¢–£–ü –ö –§–£–ù–ö–¶–ò–Ø–ú:</b>\n"
            f"‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è\n"
            f"‚Ä¢ üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            f"‚Ä¢ üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏\n"
            f"‚Ä¢ üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n\n"
            f"<b>üî• –í–ê–®–ò –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:</b>\n"
            f"‚Ä¢ üíπ –ù–µ –Ω—É–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç—ã\n"
            f"‚Ä¢ üß† –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–æ–≤\n"
            f"‚Ä¢ üõ°Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫\n"
            f"‚Ä¢ üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
            f"<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∂–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º</i>"
        )
        await message.answer(
            welcome_text,
            parse_mode="HTML",
            reply_markup=kb.home_page()
        )
        return

    # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
    current_dir = os.path.dirname(os.path.abspath(__file__))
    video_path = os.path.join(current_dir, "..", "video", "first.mp4")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if os.path.exists(video_path):
        video_msg = await message.answer_video(
            video=FSInputFile(video_path),
            caption="<b>–ù–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥</b>",
            parse_mode="HTML"
        )
        await state.update_data(video_message_id=video_msg.message_id)
    welcome_text = (
        
    )
    
    await message.answer(
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞!</b>\n\n"
        "‚úÖ <b>–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:</b>\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n"
        "üöÄ <b>–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:</b>\n"
        "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "2. –î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        "3. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n",
        parse_mode="HTML",
        reply_markup=kb.start()
    )

    
    
@router.callback_query(F.data.startswith("pre_start"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    video_message_id = data.get("video_message_id")

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if video_message_id:
        try:
            await callback.bot.delete_message(callback.message.chat.id, video_message_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")

    await state.clear()
    user = await rq.get_user_data(callback.from_user.id)
    sub = user.sub_id

    await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                                    parse_mode="HTML",
                                    reply_markup=kb.main_keyboard_2())

 #‚Å°‚Å¢‚Å£‚Å¢----------------------------------------------------------------------------------------------------------------------------------------------------------------------------‚Å°
@router.callback_query(F.data.startswith("start"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    video_message_id = data.get("video_message_id")

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    

    await state.clear()
    user = await rq.get_user_data(callback.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
    is_profile_fully_filled = user.link and user.my_chanel_description and user.my_profile_description
    
    if is_profile_fully_filled:
        await callback.message.answer("‚úÖ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É–∂–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω!</b>\n\nüöÄ <i>–í—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞.</i>", parse_mode="HTML", reply_markup=kb.go())
        await state.set_state(Step.all_ready_go)
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    # –ü–æ—Å–∫–æ–ª—å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω
    await state.update_data(is_profile_fully_filled=False)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await callback.message.answer("<b>üîó –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –í–∞—à Telegram-–∫–∞–Ω–∞–ª</b>\n\n"
                                        "üë• –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ - –∫–ª—é—á–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞! –ò–º–µ–Ω–Ω–æ –ø–æ –Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ –í–∞—à –∫–∞–Ω–∞–ª –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.\n\n"
                                        "‚ö° <i>–ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.</i>", parse_mode="HTML")
    await state.update_data(last_message_id=msg.message_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    await state.set_state(Step.link)
    
    
    
@router.message(Step.link) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
async def process_link(message: Message, state: FSMContext):
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if last_message_id:
        await message.bot.delete_message(message.chat.id, last_message_id)
    
    new_link = message.text

    if len(new_link) > 35:
        msg = await message.answer("‚ùå <b>–£–ø—Å! –°—Å—ã–ª–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è.</b>\n\n‚ñ∂Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Å—ã–ª–∫–∏ - 35 —Å–∏–º–≤–æ–ª–æ–≤.\n\nüí° <i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</i>", parse_mode="HTML")
        await state.update_data(last_message_id=msg.message_id)
        return
    
    if not new_link.startswith("t.me/"):
        msg = await message.answer("‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!</b>\n\n‚ñ∂Ô∏è –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <code>t.me/</code>\n\nüí° <i>–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: t.me/channel_name</i>", parse_mode="HTML")
        await state.update_data(last_message_id=msg.message_id)
        return

    succeful_add = await rq.add_link(message.from_user.id, new_link)

    if succeful_add:
        msg = await message.answer("‚úÖ <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!</b>\n\nüöÄ <i>–¢–µ–ø–µ—Ä—å –í–∞—à –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è!</i>", parse_mode="HTML")
    else:
        msg = await message.answer("‚ö†Ô∏è <b>–≠—Ç–∞ —Å—Å—ã–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ.</b>\n\nüí° <i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –í–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.</i>", parse_mode="HTML")
    
    await state.update_data(last_message_id=msg.message_id)
    photo_path = os.path.join(os.getcwd(), "photo", "des_chanel.jpg")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not os.path.exists(photo_path):
        await message.answer("–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")
        return
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    photo = FSInputFile(photo_path)
    photo_msg = await message.answer_photo(photo=photo)
        
    msg = await message.answer(
        "<b>üìù –°–æ–∑–¥–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –í–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞</b>\n\n"
        "üîç –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –ø–æ–≤—ã—Å–∏—Ç –∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.\n\n"
        "üí° <i>–°–æ–≤–µ—Ç: —É–∫–∞–∂–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!</i>",
        parse_mode="HTML"
    )
    await state.update_data(last_message_id=msg.message_id)
    await state.update_data(last_photo_id=photo_msg.message_id)
    await state.set_state(Step.des_chanel)



@router.message(Step.des_chanel)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞
async def process_new_des_chanel(message: Message, state: FSMContext):
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    last_photo_id = data.get("last_photo_id")  # ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    if last_message_id:
        await message.bot.delete_message(message.chat.id, last_message_id)
    if last_photo_id:
        await message.bot.delete_message(message.chat.id, last_photo_id)
    
    new_des_chanel = message.text.strip() 
    words_count = len(new_des_chanel.split())  
    
    if len(message.text) > 700:
        msg = await message.answer("‚ùå <b>–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ!</b>\n\n‚ñ∂Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–æ 700 —Å–∏–º–≤–æ–ª–æ–≤.\n\nüí° <i>–õ–∞–∫–æ–Ω–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ!</i>", parse_mode="HTML")
        await state.update_data(last_message_id=msg.message_id)
    else:
        existing_description = await rq.update_chanel_description(message.from_user.id, new_des_chanel)
        msg = await message.answer(f"‚úÖ <b>–û—Ç–ª–∏—á–Ω–æ! –û–ø–∏—Å–∞–Ω–∏–µ –í–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.</b>\n\nüéØ <i>–¢–µ–ø–µ—Ä—å AI —Å–º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –í–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!</i>", parse_mode="HTML")
        
        await state.update_data(last_message_id=msg.message_id)
        
        msg = await message.answer(
            "<b>üë§ –°–æ–∑–¥–∞–π—Ç–µ –±–∏–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –±–æ—Ç–∞</b>\n\n"
            "üíº –ë–∏–æ–≥—Ä–∞—Ñ–∏—è –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∞–∫–∫–∞—É–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç –í–∞—à–µ–≥–æ –∏–º–µ–Ω–∏.\n\n"
            "‚úÖ <i>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –¥–æ 70 —Å–∏–º–≤–æ–ª–æ–≤ + —Å—Å—ã–ª–∫–∞ –Ω–∞ –í–∞—à –∫–∞–Ω–∞–ª.</i>\n\n"
            "üí° <i>–ì—Ä–∞–º–æ—Ç–Ω–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ —á–∏—Ç–∞—Ç–µ–ª–µ–π –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é!</i>",
            parse_mode="HTML"
        )
        
        photo_path = os.path.join(os.getcwd(), "photo", "des_profile.jpg")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if not os.path.exists(photo_path):
            await message.answer("–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")
            return
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        photo = FSInputFile(photo_path)
        photo_msg = await message.answer_photo(photo=photo)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ
        await state.update_data(last_photo_id=photo_msg.message_id)
        await state.set_state(Step.des_profile)

@router.message(Step.des_profile)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
async def process_new_des_profile(message: Message, state: FSMContext):
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    last_photo_id = data.get("last_photo_id")  # ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    if last_message_id:
        await message.bot.delete_message(message.chat.id, last_message_id)
    if last_photo_id:
        await message.bot.delete_message(message.chat.id, last_photo_id)
    
    new_des_profile = message.text.strip()
    
    if len(new_des_profile) > 70:
        msg = await message.answer("‚ùå <b>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ!</b>\n\n‚ñ∂Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 70 —Å–∏–º–≤–æ–ª–æ–≤.\n\nüí° <i>–õ–∞–∫–æ–Ω–∏—á–Ω–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è –ª—É—á—à–µ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ!</i>", parse_mode="HTML")
        await state.update_data(last_message_id=msg.message_id)
    else:
        existing_description = await rq.add_profile_description(message.from_user.id, new_des_profile)
        
        if existing_description and existing_description != True:
            msg = await message.answer(f"üìù <b>–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è:</b>\n\n<b>{existing_description}</b>\n\n‚úÖ <i>–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –Ω–æ–≤–æ–µ!</i>", parse_mode="HTML")
        else:
            msg = await message.answer(f"‚úÖ <b>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!</b>\n\nüöÄ <i>–í–∞—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –µ—â–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–µ–µ!</i>", parse_mode="HTML")
        
        await state.update_data(last_message_id=msg.message_id)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
        user = await rq.get_user_data(message.from_user.id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
        is_profile_fully_filled = user.link and user.my_chanel_description and user.my_profile_description
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = await message.answer(
            "<b>üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</b>\n\n"
            "–ö–∞–∂–¥—ã–π —Å—Ç–∏–ª—å —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π –∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏:\n\n"
            "üîπ <b>üíº –î–µ–ª–æ–≤–æ–π</b> ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω, –±–∏–∑–Ω–µ—Å-—Ñ–æ–∫—É—Å\n"
            "üîπ <b>üí° –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π</b> ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏, —Å–≤–µ–∂–∏–π –≤–∑–≥–ª—è–¥\n"
            "üîπ <b>üöÄ –î–∏–Ω–∞–º–∏—á–Ω—ã–π</b> ‚Äî —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Å—Ç–∏–ª—å\n"
            "üîπ <b>üé≠ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π</b> ‚Äî —Ç—ë–ø–ª—ã–µ, —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n"
            "üîπ <b>üìä –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π</b> ‚Äî —Ñ–∞–∫—Ç—ã, –ª–æ–≥–∏–∫–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "üîπ <b>üîç –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π</b> ‚Äî –≥–ª—É–±–∏–Ω–∞ –∑–Ω–∞–Ω–∏–π, –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å\n"
            "üîπ <b>üåü –í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π</b> ‚Äî –º–æ—Ç–∏–≤–∞—Ü–∏—è, –ø–æ–∑–∏—Ç–∏–≤, –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
            "üí° <i>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏</i>",
            parse_mode="HTML",
            reply_markup=kb.style()
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ñ–ª–∞–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
        await state.update_data(last_message_id=msg.message_id, is_profile_fully_filled=is_profile_fully_filled)
        
        # –í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º set_state –≤–º–µ—Å—Ç–æ clear, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        await state.set_state(None)

@router.callback_query(F.data.startswith("go_style"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.delete()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.answer(
        "‚úÖ <b>–ü–†–ï–í–û–°–•–û–î–ù–´–ô –í–´–ë–û–† –°–¢–ò–õ–Ø!</b>\n\n"
        "üéØ <i>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Å–∏–∏!</i>\n\n"
        "üìà <b>–ß–¢–û –≠–¢–û –ó–ù–ê–ß–ò–¢ –î–õ–Ø –í–ê–°:</b>\n"
        "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±—É–¥—É—Ç —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–º–∞—Ç–∏–∫–µ –í–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
        "‚Ä¢ AI –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç —Ç–æ–Ω –∏ –ª–µ–∫—Å–∏–∫—É –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å\n"
        "‚Ä¢ –í–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —É–≤–µ–ª–∏—á–∏—Ç—Å—è –Ω–∞ 35-40%",
        parse_mode="HTML"
    )
    
    msg = await callback.message.answer(
        "<b>üîç –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ê–ù–ê–õ–û–í –î–õ–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê</b>\n\n"
        "<b>üìä –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</b>\n\n"
        "–î–æ–±–∞–≤—å—Ç–µ Telegram-–∫–∞–Ω–∞–ª—ã, –≥–¥–µ –±–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\n"
        "üìà <b>–°–¢–†–ê–¢–ï–ì–ò–Ø –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û –û–•–í–ê–¢–ê:</b>\n"
        "‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –∫–∞–Ω–∞–ª—ã —Å –∞–∫—Ç–∏–≤–Ω–æ–π, –Ω–æ –Ω–µ —Ç–æ–∫—Å–∏—á–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π\n"
        "‚Ä¢ –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∏—à–µ–≤—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –≤ –≤–∞—à–µ–π —Ç–µ–º–∞—Ç–∏–∫–µ\n"
        "‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –∫—Ä—É–ø–Ω—ã–µ –∏ —Ä–∞—Å—Ç—É—â–∏–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –±–∞–ª–∞–Ω—Å–∞\n\n"
        f'üí° <i>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ</i> <code>t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞</code>\n\n'
        f'‚è© <i>–ù–∞–∂–º–∏—Ç–µ "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ", –∫–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.</i>',
        parse_mode="HTML",
        reply_markup=kb.neiro_chanels()
    )
    
    await state.update_data(last_message_id=msg.message_id, is_profile_fully_filled=False)
    await state.set_state(Step.add_chanels)


async def delete_message_safe(bot, chat_id, message_id):
    try:
        await bot.delete_message(chat_id, message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–∞–Ω–∞–ª–æ–≤
@router.callback_query(F.data.startswith("add_chanels"))
async def handle_add_channels_callback(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await rq.get_user_data(callback.from_user.id)
    
    # –ü–æ—Å–∫–æ–ª—å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª—ã" –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è,
    # –º—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –∞ –Ω–µ –ø–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º is_profile_fully_filled=True
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    max_channels = await rq.get_sub_max(callback.from_user.id)
    current_count = await rq.count_channels_for_user(callback.from_user.id)
    remaining = max_channels - current_count
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
    channels = await rq.get_chanels(callback.from_user.id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏
    channels_text = "üì¢ <b>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∫–∞–Ω–∞–ª—ã:</b>\n\n"
    for i, channel in enumerate(channels, 1):
        channels_text += f"{i}. {channel}\n"
    
    channels_text += f"\nüìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
    channels_text += f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {current_count}\n"
    channels_text += f"‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å —Å–ª–æ—Ç–æ–≤: {remaining}\n"
    channels_text += f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –∫–∞–Ω–∞–ª–æ–≤: {max_channels}\n\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ –ª–∏–º–∏—Ç –∫–∞–Ω–∞–ª–æ–≤
    if remaining == 0:
        await callback.message.edit_text(
            f"<b>üèÜ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ ({max_channels}) –¥–æ–±–∞–≤–ª–µ–Ω–æ!</b>\n\n"
            f"üíØ <i>–í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –í–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.</i>\n\n",
            parse_mode="HTML"
            
        )
        await state.set_state(Step.add_chanels)
        # –≠—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        await state.update_data(is_profile_fully_filled=True)
        return
    else:
        await callback.message.edit_text(
            f"<b>üìä –í–∞—à–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</b>\n\n"
            f"{channels_text}\n"
            f"üí° <i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ</i> <code>t.me/–∏–º—è_–∫–∞–Ω–∞–ª–∞</code> <i>–¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</i>\n\n"
            f"‚úÖ <i>–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ', –µ—Å–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤</i>",
            parse_mode="HTML",
            reply_markup=kb.neiro_chanels()
        )
        await state.set_state(Step.add_chanels)
        # –≠—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        await state.update_data(is_profile_fully_filled=True)


@router.message(Step.add_chanels)
async def add_chanels(message: Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await rq.get_user_data(message.from_user.id)
    max_channels = await rq.get_sub_max(message.from_user.id)
    current_count = await rq.count_channels_for_user(message.from_user.id)
    remaining = max_channels - current_count
    text = message.text.strip().lower()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    is_initial_setup = not data.get("is_profile_fully_filled", True)
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    if text == "–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ":
        if current_count == 0:
            msg = await message.answer("‚ö†Ô∏è <b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª!</b>\n\nüí° <i>–î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É.</i>", parse_mode="HTML")
            await state.update_data(last_message_id=msg.message_id)
            return
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–ª–∞–≥–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
            if is_initial_setup:
                # –≠—Ç–æ –ø–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∞–Ω–∏–º–∞—Ü–∏–µ–π
                msg = await message.answer(
                    "‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
                    "üîç <i>–ë–æ—Ç –±—É–¥–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.</i>\n\n"
                    "‚è≥ <i>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –í–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...</i>",
                    parse_mode="HTML"
                )
                await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ–ø—ã—Ç–∞
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
                await state.set_state(Step.all_ready)
                await all_ready(message, state)
            else:
                # –≠—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Ü–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                channels = await rq.get_chanels(message.from_user.id)
                msg = await message.answer(
                    f"‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!</b>\n\n"
                    f"üìä <b>–¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                    f"‚Ä¢ –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {len(channels)}\n\n"
                    f"<i>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é</i>",
                    parse_mode="HTML",
                    reply_markup=kb.main_keyboard_2()
                )
                await state.clear()
            return

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    channels = text.split()

    added_channels = 0
    for channel in channels:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Å—ã–ª–∫–∏
        if not channel.startswith("t.me/"):
            msg = await message.answer("‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!</b>\n\n‚ñ∂Ô∏è –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <code>t.me/</code>\n\nüí° <i>–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞</i>", parse_mode="HTML", reply_markup=kb.neiro_chanels())
            await state.update_data(last_message_id=msg.message_id)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å—Å—ã–ª–∫–∏
        if len(channel) > 35:
            msg = await message.answer("‚ùå <b>–°—Å—ã–ª–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è!</b>\n\n‚ñ∂Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Å—ã–ª–∫–∏ - 35 —Å–∏–º–≤–æ–ª–æ–≤.\n\nüí° <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</i>", parse_mode="HTML", reply_markup=kb.neiro_chanels())
            await state.update_data(last_message_id=msg.message_id)
            return

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç–æ
        if remaining > 0:
            added = await rq.add_chanels(message.from_user.id, channel)
            if added:
                remaining -= 1
                added_channels += 1
            else:
                msg = await message.answer(f"‚ö†Ô∏è <b>–ö–∞–Ω–∞–ª {channel} —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –í–∞—à —Å–ø–∏—Å–æ–∫.</b>\n\nüí° <i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª.</i>", parse_mode="HTML", reply_markup=kb.neiro_chanels())
                await state.update_data(last_message_id=msg.message_id)
        else:
            break

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if added_channels > 0:
        if remaining > 0:
            msg = await message.answer(
                f'‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!</b>\n\n'
                f'üìä –£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å –µ—â–µ {remaining} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤.\n\n'
                f'üí° <i>–î–æ–±–∞–≤—å—Ç–µ –µ—â–µ –∫–∞–Ω–∞–ª—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ" –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.</i>', 
                parse_mode="HTML",
                reply_markup=kb.neiro_chanels()
            )
        else:
            # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –∫–∞–Ω–∞–ª–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = await message.answer(
                "üèÜ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤.</b>\n\n"
                "üíØ <i>–í—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –í–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.</i>\n\n"
                "‚è© <i>–ù–∞–∂–º–∏—Ç–µ '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.</i>", 
                parse_mode="HTML",
                reply_markup=kb.neiro_chanels()
            )
    else:
        msg = await message.answer(
            "‚ö†Ô∏è <b>–ù–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</b>\n\nüí° <i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'.</i>", 
            parse_mode="HTML",
            reply_markup=kb.neiro_chanels()
        )
    await state.update_data(last_message_id=msg.message_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è
    # –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
    if remaining == 0 and is_initial_setup:
        # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è
        msg = await message.answer(
            f"<b>üèÜ –í—Å–µ {max_channels} –∫–∞–Ω–∞–ª–æ–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!</b>\n\n"
            f"üìä <i>–í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –í–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.</i>\n\n"
            f"‚öôÔ∏è <i>–°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å...</i>",
            parse_mode="HTML"
        )
        await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ–ø—ã—Ç–∞
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è
        await state.set_state(Step.all_ready)
        await all_ready(message, state)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —à–∞–≥—É


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞ –∫–∞–Ω–∞–ª–æ–≤
@router.message(Step.all_ready)
async def all_ready(message: Union[Message, CallbackQuery], state: FSMContext):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å
    if isinstance(message, CallbackQuery):
        user_id = message.from_user.id
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
        sticker_msg = await message.message.answer_sticker("CAACAgIAAxkBAAENkmln2Vcs_GBmuQWW5JIQ08wsm-DUeAACMgAD9wLID8IewmWo1Zl6NgQ")
        msg = await message.message.answer("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üîÑ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</i>", parse_mode="HTML")
        bot = message.bot
        chat_id = message.message.chat.id
    else:
        user_id = message.from_user.id
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
        sticker_msg = await message.answer_sticker("CAACAgIAAxkBAAENkmln2Vcs_GBmuQWW5JIQ08wsm-DUeAACMgAD9wLID8IewmWo1Zl6NgQ")
        msg = await message.answer("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üîÑ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</i>", parse_mode="HTML")
        bot = message.bot
        chat_id = message.chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = await rq.get_user_data(user_id)
    channels = await rq.get_chanels(user_id)

    # –ê–Ω–∏–º–∞—Ü–∏—è "–∑–∞–≥—Ä—É–∑–∫–∏"
    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üì° –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API</i>", parse_mode="HTML")
    await asyncio.sleep(0.8)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üîó –î–æ–±–∞–≤–ª—è—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª</i>", parse_mode="HTML")
    await asyncio.sleep(0.7)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üìù –ó–∞–≥—Ä—É–∂–∞—é –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞</i>", parse_mode="HTML")
    await asyncio.sleep(0.6)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø—Ä–æ—Ñ–∏–ª—å –±–æ—Ç–∞</i>", parse_mode="HTML")
    await asyncio.sleep(0.9)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üì¢ –î–æ–±–∞–≤–ª—è—é –∫–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</i>", parse_mode="HTML")
    await asyncio.sleep(0.7)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ–π—Ä–æ—Å–µ—Ç–∏</i>", parse_mode="HTML")
    await asyncio.sleep(1.1)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</i>", parse_mode="HTML")
    await asyncio.sleep(0.8)

    await msg.edit_text("‚ö° <b>–°–æ–∑–¥–∞—é –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</b>\n\n<i>‚ú® –ü—Ä–∏–º–µ–Ω—è—é —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</i>", parse_mode="HTML")
    await asyncio.sleep(1)

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –ø–µ—á–∞—Ç–∞—é—â–µ–≥–æ—Å—è —Ç–µ–∫—Å—Ç–∞
    final_msg_text = "üéâ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
    final_msg_text += f"üìå <b>–í–∞—à –∫–∞–Ω–∞–ª:</b> {user_data.link}\n"
    final_msg_text += f"‚ÑπÔ∏è <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:</b> {user_data.my_chanel_description}\n"
    final_msg_text += f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –±–æ—Ç–∞:</b> {user_data.my_profile_description}\n"
    final_msg_text += f"üéØ <b>–ö–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:</b> {len(channels)}\n\n"
    final_msg_text += "üöÄ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.</b>\n\n"
    final_msg_text += "üí° <i>–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ü–µ–Ω—Ç—Ä–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.</i>\n\n"
    final_msg_text += "‚è© <i>–ü—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!</i>\n"

    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        last_message_id = msg.message_id
        
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ —Å—Ç–∏–∫–µ—Ä–∞ –∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        start_id = max(1, last_message_id - 30)
        for i in range(start_id, last_message_id):
            if i != sticker_msg.message_id and i != last_message_id:
                try:
                    await bot.delete_message(chat_id, i)
                except Exception:
                    continue
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    final_msg = await msg.edit_text(final_msg_text, parse_mode="HTML", reply_markup=kb.main_keyboard_go())
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await delete_message_safe(bot, sticker_msg.chat.id, sticker_msg.message_id)
    
    await state.clear()

@router.message(Step.all_ready_go)
async def home(message: Message, state: FSMContext):
    await message.answer(
        f"<b>üèÜ {message.from_user.first_name}, –í–∞—à –¶–µ–Ω—Ç—Ä –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ù–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–æ–º</b>\n\n"
        f"<b>üìä –í–ê–®–ò –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –í –û–î–ù–û–ú –ú–ï–°–¢–ï:</b>\n"
        f"‚Ä¢ üíé –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã\n"
        f"‚Ä¢ üìà –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        f"‚Ä¢ üöÄ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
        f"‚Ä¢ üîç –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—é\n\n"
        f"<b>üéØ –¢–ï–ö–£–©–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:</b>\n"
        f"‚Ä¢ ‚ö° –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: –ì–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É\n"
        f"‚Ä¢ üî• –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞: –í—ã—Å–æ–∫–∏–π\n\n"
        f"<b>üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø –≠–ö–°–ü–ï–†–¢–ê:</b>\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è!",
        parse_mode="HTML",  # –£–∫–∞–∑—ã–≤–∞–µ–º parse_mode –æ–¥–∏–Ω —Ä–∞–∑
        reply_markup=kb.main_keyboard_3()  # –¥—Ä—É–≥–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    )
    await state.clear()
    
@router.callback_query(F.data.startswith("next"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
    await callback.message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await callback.message.answer(
        "<b>‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ò–Ø</b>\n\n"
        "<b>üïí –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</b>\n\n"
        "–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –±–æ—Ç –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.\n\n"
        "üí° <i>–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 200-300 —Å–µ–∫—É–Ω–¥</i>\n\n"
        "üìä <b>–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ:</b>\n"
        "‚Ä¢ –°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ–µ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ\n"
        "‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–æ–≤—ã—à–∞–µ—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –¥–æ 40%\n"
        "‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
        parse_mode="HTML",
        reply_markup=kb.period_com()
    )
    await state.update_data(last_message_id=msg.message_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(Step.period_com)
    
@router.message(Step.period_com)
async def period(message: Message, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    if last_message_id:
        await delete_message_safe(message.bot, message.chat.id, last_message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await message.answer("‚úÖ <b>–í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>\n\nüí° <i>–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.</i>", parse_mode="HTML")
    await state.update_data(last_message_id=msg.message_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è

    msg = await message.answer(
        "<b>üìä –ù–ê–°–¢–†–û–ô–ö–ê –ß–ê–°–¢–û–¢–´ –ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ò–Ø</b>\n\n"
        "<b>üìà –£–∫–∞–∂–∏—Ç–µ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª</b>\n\n"
        "–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –ø–æ–¥—Ä—è–¥ –±–æ—Ç –±—É–¥–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∑–∞ 1 –¥–µ–Ω—å.\n\n"
        "üí° <i>–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 3-5 –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å</i>\n\n"
        "üìä <b>–ù–∞—à–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:</b>\n"
        "‚Ä¢ 3-5 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –¥–µ–Ω—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Ä–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ 25%\n"
        "‚Ä¢ –ë–æ–ª–µ–µ 5 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –º–æ–≥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ —Å–ø–∞–º\n"
        "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞",
        parse_mode="HTML",
        reply_markup=kb.sleep_bot()
    )
    await state.update_data(last_message_id=msg.message_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(Step.sleep_bot)

@router.message(Step.sleep_bot)
async def sleep(message: Message, state: FSMContext):
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    if last_message_id:
        await delete_message_safe(message.bot, message.chat.id, last_message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await message.answer("‚úÖ <b>–õ–∏–º–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>\n\nüí° <i>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</i>", parse_mode="HTML")
    await state.update_data(last_message_id=msg.message_id)

    msg = await message.answer(
        "<b>‚è±Ô∏è –ù–ê–°–¢–†–û–ô–ö–ê –†–ï–ñ–ò–ú–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò</b>\n\n"
        "<b>üõ°Ô∏è –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–¥—ã—Ö–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã</b>\n\n"
        "–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–¥–∞—ë—Ç, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ 50 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\n"
        "üí° <i>–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 180-240 –º–∏–Ω—É—Ç</i>\n\n"
        "üìä <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
        "‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram\n"
        "‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –∂–∏–∑–Ω–∏ —Ä–∞–±–æ—á–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ 300%\n"
        "‚Ä¢ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ",
        parse_mode="HTML",
        reply_markup=kb.sleep_sleep()
    )
    await state.update_data(last_message_id=msg.message_id)
    await state.set_state(Step.launch_bot)

@router.message(Step.launch_bot)
async def all_ready_bot(message: Message, state: FSMContext):
    data = await state.get_data()
    last_message_id = data.get("last_message_id")
    
    if last_message_id:
        await delete_message_safe(message.bot, message.chat.id, last_message_id)

    msg = await message.answer(
        "<b>üöÄ –ù–ê–°–¢–†–û–ô–ö–ò –£–°–ü–ï–®–ù–û –°–û–•–†–ê–ù–ï–ù–´!</b>\n\n"
        "<b>‚úÖ –í–°–ï –ü–ê–†–ê–ú–ï–¢–†–´ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–´:</b>\n"
        "‚Ä¢ –í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º\n"
        "‚Ä¢ –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ –†–µ–∂–∏–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
        "üìä <b>–ü–†–û–ì–ù–û–ó –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò:</b>\n"
        "‚Ä¢ –ü—Ä–∏—Ä–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: –¥–æ 200%\n"
        "‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ö–≤–∞—Ç–∞: –¥–æ 350%\n"
        "‚Ä¢ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: 10-15% –≤ –º–µ—Å—è—Ü\n\n"
        "üí° <i>–ù–∞–∂–º–∏—Ç–µ ¬´–°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å¬ª, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–∞—à—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫!</i>",
        parse_mode="HTML",
        reply_markup=kb.com_bot()
    )

@router.callback_query(F.data.startswith("compile"))
async def compile_bot(callback: CallbackQuery, state: FSMContext):
    # –ê–Ω–∏–º–∞—Ü–∏—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
    sticker_msg = await callback.message.answer_sticker("CAACAgIAAxkBAAENkmtn2VdDgotY0DzTEqEfmgeGUOg3VQACLAAD9wLID7xB4Mj74UDTNgQ")
    msg = await callback.message.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞</i>", parse_mode="HTML")
    await asyncio.sleep(1.2)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è</i>", parse_mode="HTML")
    await asyncio.sleep(0.8)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</i>", parse_mode="HTML")
    await asyncio.sleep(0.9)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API Telegram</i>", parse_mode="HTML")
    await asyncio.sleep(0.7)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–π—Ä–æ–º–æ–¥—É–ª–µ–π</i>", parse_mode="HTML")
    await asyncio.sleep(1.1)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>üìä –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</i>", parse_mode="HTML")
    await asyncio.sleep(0.8)

    await msg.edit_text("‚ö° <b>–ö–æ–º–ø–∏–ª–∏—Ä—É—é –±–æ—Ç–∞...</b>\n\n<i>‚ú® –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞</i>", parse_mode="HTML")
    await asyncio.sleep(1)

    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        last_message_id = callback.message.message_id
        chat_id = callback.message.chat.id
        
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π, –∏—Å–∫–ª—é—á–∞—è —Å—Ç–∏–∫–µ—Ä –∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        for i in range(last_message_id - 100, last_message_id + 1):
            if i != sticker_msg.message_id and i != msg.message_id:
                try:
                    await callback.bot.delete_message(chat_id, i)
                except Exception:
                    continue
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏: {e}")

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    welcome_text = (
        f"<b>üöÄ –í–ê–® –¶–ï–ù–¢–† –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–û–ô</b>\n\n"
        f"<b>üìä –ú–ì–ù–û–í–ï–ù–ù–´–ô –î–û–°–¢–£–ü –ö –§–£–ù–ö–¶–ò–Ø–ú:</b>\n"
        f"‚Ä¢ ‚öôÔ∏è –¢–æ–Ω–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã\n"
        f"‚Ä¢ ‚ö° –¢–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n"
        f"‚Ä¢ üìà –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        f"‚Ä¢ üîÑ –û–ø—Ü–∏–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n\n"
        f"<b>üî• –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–ê–®–ï–ô –°–ò–°–¢–ï–ú–´:</b>\n"
        f"‚Ä¢ üíπ –ù–µ –Ω—É–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç—ã, —É –Ω–∞—Å –∏—Ö –±–æ–ª—å—à–∞—è –±–∞–∑–∞\n"
        f"‚Ä¢ üöÄ –ü—Ä–æ–∫—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö\n"
        f"‚Ä¢ üß† –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–Ω—ã—Ö —Ä–µ–ø–ª–∏–∫\n"
        f"‚Ä¢ üõ°Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n"
        f"‚Ä¢ üì± –ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
        f"<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º</i>"
    )

    # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    final_msg = await callback.message.answer(
        welcome_text,
        parse_mode="HTML",
        reply_markup=kb.home_page()
    )
    
    # –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    await delete_message_safe(callback.bot, sticker_msg.chat.id, sticker_msg.message_id)
    await delete_message_safe(callback.bot, msg.chat.id, msg.message_id)
    
    await state.clear()

#‚Å°‚Å¢‚Å£‚Å¢-----------------------------------------------------–ü–æ–¥–ø–∏—Å–∫–∞ –æ–ø–ª–∞—Ç–∞---------------------------------------------------------‚Å°

    
@router.callback_query(F.data.startswith("all_ready_pay"))
async def com_start(callback: CallbackQuery):
    user = await rq.get_user_data(callback.from_user.id)
    sub = await rq.get_sub(callback.from_user.id)
    
    if user.sub_id == 1:
        # –ü–æ–¥–ø–∏—Å–∫–∞ –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        await callback.message.edit_text(
            "<b>‚ö†Ô∏è –û–ø–ª–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</b>\n\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª –≤–∞—à—É –æ–ø–ª–∞—Ç—É.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏,\n"
            "–µ—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É –±–æ–ª–µ–µ 30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥.\n\n"
            "üì© –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @Alexcharevich",
            parse_mode="HTML",
            reply_markup=kb.main_button()
        )
        return
    
    # –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ (sub_id != 1)
    # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    current_date = datetime.datetime.now()
    # –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∞—Ä–∏—Ñ—É
    end_date = current_date + timedelta(days=sub.date_day)
   
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    await rq.set_sub_data(callback.from_user.id, end_date)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    formatted_date = end_date.strftime("%d.%m.%Y")
    
    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    await callback.message.edit_text(
        f"<b>‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n"
        f"<b>üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–ê–®–ï–ô –ü–û–î–ü–ò–°–ö–ï:</b>\n"
        f"‚Ä¢ üíé –í–∞—à —Ç–∞—Ä–∏—Ñ: {sub.sub_name}\n"
        f"‚Ä¢ ‚è±Ô∏è –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {formatted_date}\n"
        f"‚Ä¢ üì∫ –î–æ—Å—Ç—É–ø–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {sub.max_chanels}\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞!\n"
        f"–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.",
        parse_mode="HTML",
        reply_markup=kb.home_page()
    )
    return
    
        

@router.callback_query(F.data.startswith("by_subscriptions"))
async def com_start(callback: CallbackQuery):
    await callback.message.edit_text(
        "<b>üìä –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ü–ª–∞–Ω—ã</b>\n\n"
        
        "<b>üîπ –ù–∞—á–∞–ª—å–Ω—ã–π</b>\n"
        "‚Ä¢ 14 –∫–∞–Ω–∞–ª–æ–≤\n"
        "‚Ä¢ 30 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ <s>4980‚ÇΩ</s> 2490‚ÇΩ\n"
        "‚Ä¢ 15-25 –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –¥–µ–Ω—å\n"
        "‚Ä¢ 1 –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ <i>–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –∏ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤</i>\n\n"

        "<b>üîπ –ë–∞–∑–æ–≤—ã–π</b>\n"
        "‚Ä¢ 20 –∫–∞–Ω–∞–ª–æ–≤\n"
        "‚Ä¢ 30 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ <s>5980‚ÇΩ</s> 2990‚ÇΩ\n"
        "‚Ä¢ 25-40 –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –¥–µ–Ω—å\n"
        "‚Ä¢ 3 –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ <i>–î–ª—è –±–∏–∑–Ω–µ—Å–∞ —Å —Å—Ä–µ–¥–Ω–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏</i>\n\n"

        "<b>üîπ –ü—Ä–æ</b>\n"
        "‚Ä¢ 35 –∫–∞–Ω–∞–ª–æ–≤\n"
        "‚Ä¢ 30 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ <s>8980‚ÇΩ</s> 4490‚ÇΩ\n"
        "‚Ä¢ 40-65 –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –¥–µ–Ω—å\n"
        "‚Ä¢ 3 –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ <i>–î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫—Ä—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</i>\n\n"

        "<b>üîπ –≠–∫—Å–ø–µ—Ä—Ç</b>\n"
        "‚Ä¢ 50 –∫–∞–Ω–∞–ª–æ–≤\n"
        "‚Ä¢ 60 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ <s>14980‚ÇΩ</s> 7490‚ÇΩ\n"
        "‚Ä¢ 55+ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –¥–µ–Ω—å\n"
        "‚Ä¢ 3 –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ <i>–î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</i>\n\n"

        "<b>üîπ –ì–æ–¥–æ–≤–æ–π –ü–ª–∞–Ω (–°—É–ø–µ—Ä –≠–∫—Å–ø–µ—Ä—Ç)</b>\n"
        "‚Ä¢ 50 –∫–∞–Ω–∞–ª–æ–≤\n"
        "‚Ä¢ 365 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ <s>17980‚ÇΩ</s> 8990‚ÇΩ\n"
        "‚Ä¢ 55+ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –¥–µ–Ω—å\n"
        "‚Ä¢ 3 –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ <i>–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ –≥–æ–¥ —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏</i>\n"
        "‚Ä¢ <i>+ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</i>\n\n"

        "üí° <b>–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥:</b> –í—Å–µ —Ç–∞—Ä–∏—Ñ—ã —Å–µ–π—á–∞—Å –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–æ —Å–∫–∏–¥–∫–æ–π 50%!\n"
        "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ü—Ä–µ–º–∏—É–º –∞–∫–∫–∞—É–Ω—Ç +2000‚ÇΩ –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n\n"

        "<b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
        "‚Ä¢ –ü–∞—Ä—Å–µ—Ä –∫–∞–Ω–∞–ª–æ–≤: –í—Ö–æ–¥–∏—Ç –≤–æ –≤—Å–µ —Ç–∞—Ä–∏—Ñ—ã.\n"
        "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: –î–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ ‚Äî 1, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äî 3.\n"
        "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ª—é–±–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –≤—Å–µ –±—É–¥—É—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—É–¥—É—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏.\n"
        "‚Ä¢ –ì–∏–±–∫–æ—Å—Ç—å: –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ –≥–æ–¥.\n\n"
        
        "üìà <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ:</b>\n\n"
        "üéØ <i>–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –ø–æ —Å–Ω–∏–∂–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ!</i>",
        parse_mode="HTML",
        reply_markup=kb.get_subscription_keyboard()
    )


@router.callback_query(F.data.startswith("subscriptions"))
async def com_start(callback: CallbackQuery):
    user = await rq.get_user_data(callback.from_user.id)
    date_exit = user.date_sub
    sub = await rq.get_sub(callback.from_user.id)
    sub_id = sub.id
    
    if sub_id != 1:
        message_text = (
            "<b>‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
            f"üìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {date_exit}\n"
            f"üìä –î–æ—Å—Ç—É–ø–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {sub.max_chanels}\n\n"
            "üí° –î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞\n"
            "–ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–¥–ø–∏—Å–æ–∫'"
        )
    else:
        message_text = (
            "<b>üéØ –ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
            "‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞\n"
            "‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ 10 –¥–Ω–µ–π\n"
            "‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n\n"
            "üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É"
        )

    await callback.message.edit_text(
        message_text,
        parse_mode="HTML",
        reply_markup=kb.main_button()
    )

#‚Å°‚Å¢‚Å£‚Å°‚Å¢‚Å£‚Å¢-------------------------------------------------------------------------------------------------------------------------------‚Å°









#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------














#----------------------------------------------------------------------------------------–ö–ê–ù–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´-------------------------------------------------------------------------------------------------

@router.callback_query(F.data == "list_chanel")
async def com_start(callback: CallbackQuery):
    user = await rq.get_user_data(callback.from_user.id)
    
    await callback.message.edit_text("–¢–≤–æ–∏ –∫–∞–Ω–∞–ª—ã, –≤—ã–±–µ—Ä–∏ —á—Ç–æ –±—ã —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å", reply_markup = await kb.inline_chanels(callback.from_user.id))



@router.callback_query(F.data.startswith("query_"))
async def com_start(callback: CallbackQuery):
    old_link = callback.data.replace("query_", "")
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup= kb.ed_or_del(old_link))



@router.callback_query(F.data.startswith("edit_chanel_"))
async def com_start(callback: CallbackQuery, state: FSMContext):
    old_link = callback.data.replace("edit_chanel_", "")
    await state.update_data(old_link=old_link)
    await state.set_state(EditChannelState.waiting_for_new_link)
    await callback.message.edit_text(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –≤–º–µ—Å—Ç–æ –∫–∞–Ω–∞–ª–∞: {old_link}")



@router.message(EditChannelState.waiting_for_new_link)
async def process_new_link(message: Message, state: FSMContext):
    data = await state.get_data()
    old_link = data.get("old_link")  # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–∞–Ω–∞–ª –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    new_link = message.text  # –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    if not new_link.startswith("t.me/"):  # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫—É
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É (–¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å t.me/)")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
    await rq.update_channel(message.from_user.id, old_link, new_link)

    await message.answer(f"–ö–∞–Ω–∞–ª –æ–±–Ω–æ–≤–ª—ë–Ω: {old_link} ‚Üí {new_link}")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ



@router.callback_query(F.data.startswith("delete_chanel_"))
async def com_start(callback: CallbackQuery):
    old_link = callback.data.replace("delete_chanel_", "")
    await rq.delete_channel(callback.from_user.id, old_link)
    await callback.message.edit_text(f"–£–¥–∞–ª–∏–ª –∫–∞–Ω–∞–ª {old_link} –∏–∑ –±–∞–∑—ã", reply_markup=kb.main_button() )







@router.callback_query(F.data.startswith("my_bot"))
async def com_start(callback: CallbackQuery):
    user = await rq.get_user_data(callback.from_user.id)
    sub = user.sub_id
    if sub ==1:
        await callback.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ (")
        return
    bot = await rq.get_bot_data(callback.from_user.id)
    await callback.message.edit_text(f"–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à–µ–≥–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –æ—Ç –∏–º–µ–Ω–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç  –æ—Å—Ç–∞–≤–ª—Ç—å—Å—è –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏: {bot.link_bot}")
        
        
    
        
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_suba
@router.message(Command('add_suba'))
async def get_chanels_other(message: Message, state: FSMContext):
    await message.answer("–î–∞–≤–∞–π —Ç–≤–æ–π tg_id", reply_markup=kb.main_button())
    await state.set_state(EditChannelState.waiting_tg_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "waiting_tg_id"
@router.message(EditChannelState.waiting_tg_id)
async def process_channel_link(message: Message, state: FSMContext):
    tg_id = message.text.strip()  # –ü–æ–ª—É—á–∞–µ–º tg_id –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º
    if tg_id == "–Ω–∞–∑–∞–¥":
        await state.clear()
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=kb.main_button())
        return

    if not tg_id.isdigit():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ tg_id —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
        await message.answer("–¢—ã –≤–≤–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π tg_id. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
        return

    tg_id = int(tg_id)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º tg_id –≤ —á–∏—Å–ª–æ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º tg_id –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(tg_id=tg_id)

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ tg_id
    chanels = await rq.get_chanels(tg_id)

    if not chanels:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ tg_id.")
    else:
        for chanel in chanels:
            await message.answer(chanel)

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    await state.clear()

@router.callback_query(F.data.startswith("feedback"))
async def com_start(callback: CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å –º–æ—â–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
    await callback.message.answer(
        "<b>üî• –î–û–ö–ê–ó–ê–ù–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –†–ï–ê–õ–¨–ù–´–ï –û–¢–ó–´–í–´</b>\n\n"
        "<b>–†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–æ +45% –∑–∞ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü!</b>\n"
        "–í–ª–∞–¥–µ–ª—å—Ü—ã –∫–∞–Ω–∞–ª–æ–≤ —É–∂–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –±–æ–ª—å—à–µ —Å –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–æ–π.\n\n"
        "<i>–°–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–∏–∂–µ ‚¨áÔ∏è</i>",
        parse_mode="HTML"
    )
    
    # –°—Ä–∞–∑—É –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∑—ã–≤—ã
    folder_path = os.path.join("feedback")
    files = sorted(os.listdir(folder_path))
    
    images = [f for f in files if f.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.webp'))]
    
    if not images:
        await callback.message.answer(
            "<b>‚ùå –û—Ç–∑—ã–≤—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</b>\n\n"
            "–ú—ã —Å–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –æ—Ç–∑—ã–≤ –∏ –ø–æ–ª—É—á–∏—Ç +14 –¥–Ω–µ–π –∫ –ø–æ–¥–ø–∏—Å–∫–µ!",
            parse_mode="HTML",
            reply_markup=kb.feedback()
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
    await callback.message.answer(
        "<b>üíØ –û–¢–ó–´–í–´ –ù–ê–®–ò–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:</b>\n"
        "–†–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –¥–æ 300%",
        parse_mode="HTML"
    )
    
    # –¢–µ–ª–µ–≥—Ä–∞–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–∞–∫—Å–∏–º—É–º 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ,
    # –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∏–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 —Ñ–æ—Ç–æ
    from aiogram.types import InputMediaPhoto
    
    # –†–∞–∑–±–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 —à—Ç—É–∫
    chunk_size = 10
    photo_groups = [images[i:i + chunk_size] for i in range(0, len(images), chunk_size)]
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –≥—Ä—É–ø–ø—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    for i, photo_group in enumerate(photo_groups):
        media_group = []
        for img in photo_group:
            file_path = os.path.join(folder_path, img)
            media_group.append(InputMediaPhoto(media=FSInputFile(file_path)))
        
        if media_group:
            await callback.message.answer_media_group(media=media_group)
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ –≥—Ä—É–ø–ø
            await asyncio.sleep(1)
    
    # –í –∫–æ–Ω—Ü–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é
    await callback.message.answer(
        "<b>üèÜ –•–û–¢–ò–¢–ï –¢–ê–ö –ñ–ï?!</b>\n\n"
        "–ë–æ–ª–µ–µ 90% –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ—Ç–º–µ—á–∞—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ –ø–µ—Ä–≤—ã–µ 2 –Ω–µ–¥–µ–ª–∏.\n\n"
        "<b>–û–ì–†–ê–ù–ò–ß–ï–ù–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï:</b>\n"
        "‚Ä¢ –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ <b>+5 –î–ù–ï–ô</b> –∫–æ —Å–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ\n"
        "‚Ä¢ –†–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞\n\n"
        "<i>üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ</i>",
        parse_mode="HTML",
        reply_markup=kb.feedback()
    )
    
@router.callback_query(F.data.startswith("otziv"))
async def com_start(callback: CallbackQuery):
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∑—ã–≤–æ–≤
    await com_start(callback)

@router.callback_query(F.data.startswith("home_page"))
async def home_page(callback: CallbackQuery, state: FSMContext):
    welcome_text = (f"<b>üöÄ –¶–ï–ù–¢–† –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ï–ô–†–û–ö–û–ú–ú–ï–ù–¢–ò–ù–ì–û–ú</b>\n\n"
            f"<b>üìä –ú–ì–ù–û–í–ï–ù–ù–´–ô –î–û–°–¢–£–ü –ö –§–£–ù–ö–¶–ò–Ø–ú:</b>\n"
            f"‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è\n"
            f"‚Ä¢ üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            f"‚Ä¢ üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏\n"
            f"‚Ä¢ üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n\n"
            f"<b>üî• –í–ê–®–ò –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:</b>\n"
            f"‚Ä¢ üíπ –ù–µ –Ω—É–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç—ã\n"
            f"‚Ä¢ üß† –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–æ–≤\n"
            f"‚Ä¢ üõ°Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫\n"
            f"‚Ä¢ üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n\n"
            f"<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∂–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º</i>"
        )
    await callback.message.edit_text(
            welcome_text,
            parse_mode="HTML",
            reply_markup=kb.home_page()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    current_message_id = callback.message.message_id
    asyncio.create_task(delete_messages_background(
            callback.bot, 
            callback.message.chat.id, 
            current_message_id
        ))
    return

    # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    welcome_text = (
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–∞!</b>\n\n"
        "‚úÖ <b>–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:</b>\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å—Ç–æ–≤\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏\n"
        "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n"
        "üöÄ <b>–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:</b>\n"
        "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "2. –î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        "3. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
    )
    
    await callback.message.edit_text(
        welcome_text,
        parse_mode="HTML",
        reply_markup=kb.start()
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    current_message_id = callback.message.message_id
    asyncio.create_task(delete_messages_background(
        callback.bot, 
        callback.message.chat.id, 
        current_message_id
    ))
    
    await state.clear()

@router.callback_query(F.data == "back")
async def back_to_main(callback: CallbackQuery, state: FSMContext):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∫–æ–¥, —á—Ç–æ –∏ –¥–ª—è home_page
    await home_page(callback, state)

@router.callback_query(F.data == "main_menu")
async def main_menu(callback: CallbackQuery, state: FSMContext):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∫–æ–¥, —á—Ç–æ –∏ –¥–ª—è home_page
    await home_page(callback, state)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
async def delete_messages_background(bot, chat_id, current_message_id):
    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ —Ç–µ–∫—É—â–∏–º, —á—Ç–æ–±—ã –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã
    start_id = max(1, current_message_id - 50)  # –ù–µ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ ID
    
    # –°—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    error_count = 0
    max_errors = 3  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
    
    for i in range(current_message_id - 1, start_id - 1, -1):
        try:
            await bot.delete_message(chat_id, i)
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —É–¥–∞–ª–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API Telegram
            await asyncio.sleep(0.1)
        except Exception as e:
            error_count += 1
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –º–∞–ª–æ 
            # –∏–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
            if error_count <= max_errors:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {i}: {str(e)}")
            elif error_count == max_errors + 1:
                print(f"–î–∞–ª—å–Ω–µ–π—à–∏–µ –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞")
    
    # –ï—Å–ª–∏ –±—ã–ª–∏ –æ—à–∏–±–∫–∏, –≤—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    if error_count > max_errors:
        print(f"–í—Å–µ–≥–æ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {error_count}")

@router.callback_query(F.data == "enough_channels")
async def handle_enough_channels(callback: CallbackQuery, state: FSMContext):
    current_count = await rq.count_channels_for_user(callback.from_user.id)
    if current_count == 0:
        await callback.message.edit_text(
            "–í—ã –¥–æ–ª–∂–Ω—ã –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            parse_mode="HTML",
            reply_markup=kb.neiro_chanels()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    is_initial_setup = not data.get("is_profile_fully_filled", True)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if is_initial_setup:
        # –≠—Ç–æ –ø–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        await callback.message.edit_text(
            "‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
            "‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!</b>\n\n"
            "‚è≥ <i>–°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...</i>",
            parse_mode="HTML"
        )
        await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ–ø—ã—Ç–∞
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        await state.set_state(Step.all_ready)
        await all_ready(callback, state)
    else:
        # –≠—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Ü–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        channels = await rq.get_chanels(callback.from_user.id)
        await callback.message.edit_text(
            f"‚úÖ <b>–ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!</b>\n\n"
            f"üìä <b>–¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {len(channels)}\n\n"
            f"<i>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é</i>",
            parse_mode="HTML",
            reply_markup=kb.main_keyboard_2()
        )
        await state.clear()

@router.message(Command('clear'))
async def clear_history(message: Message):
    try:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
        await message.delete()
        
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        last_message_id = message.message_id
        
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π
        deleted_count = 0
        for i in range(last_message_id - 100, last_message_id):
            try:
                await message.bot.delete_message(message.chat.id, i)
                deleted_count += 1
                if deleted_count % 10 == 0:  # –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –∫–∞–∂–¥—ã–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
                    await asyncio.sleep(0.5)
            except Exception:
                continue
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ
        cleanup_msg = await message.answer(f"‚ú® –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞")
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—á–∏—Å—Ç–∫–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        await asyncio.sleep(3)
        await cleanup_msg.delete()
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
@router.callback_query(F.data == "my_profile")
async def edit_profile_menu(callback: CallbackQuery):
    user = await rq.get_user_data(callback.from_user.id)
    
    profile_text = (
        f"<b>üßë‚Äçüíª –¶–ï–ù–¢–† –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–§–ò–õ–ï–ú</b>\n\n"
        f"<b>‚öôÔ∏è –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò –í–ê–®–ï–ì–û –ö–ê–ù–ê–õ–ê:</b>\n"
        f"üîó <b>–í–∞—à –∫–∞–Ω–∞–ª:</b> {user.link}\n"
        f"‚ÑπÔ∏è <b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:</b> {user.my_chanel_description}\n"
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –±–æ—Ç–∞:</b> {user.my_profile_description}\n\n"
        f"<b>üíº –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –î–õ–Ø –í–ê–®–ï–ì–û –†–û–°–¢–ê:</b>\n"
        f"–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è. –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏—Ç–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ 200-300%!"
    )
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –º–æ–¥—É–ª—è keyboards
    await callback.message.edit_text(
        profile_text,
        parse_mode="HTML",
        reply_markup=kb.main_keyboard_2()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"
@router.callback_query(F.data == "description_chanel")
async def edit_channel_description(callback: CallbackQuery, state: FSMContext):
    user = await rq.get_user_data(callback.from_user.id)
    
    text = (
        f"<b>üìù –°–û–ó–î–ê–ô–¢–ï –ò–î–ï–ê–õ–¨–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï –í–ê–®–ï–ì–û –ö–ê–ù–ê–õ–ê</b>\n\n"
        f"<b>üîç –¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n"
        f"<i>{user.my_chanel_description}</i>\n\n"
        f"<b>üí∞ –ö–ê–ö –ü–†–ê–í–ò–õ–¨–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï –£–í–ï–õ–ò–ß–ò–í–ê–ï–¢ –î–û–•–û–î:</b>\n"
        f"‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –≤–∞—à–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –≤—ã–∑—ã–≤–∞—é—Ç –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è\n"
        f"‚Ä¢ –¢–æ—á–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é\n"
        f"‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã –∫–∞–Ω–∞–ª–∞ –ø–æ–º–æ–≥–∞—é—Ç AI —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n\n"
        f"<b>‚úèÔ∏è –í–í–ï–î–ò–¢–ï –ù–û–í–û–ï –û–ü–ò–°–ê–ù–ò–ï (–¥–æ 700 —Å–∏–º–≤–æ–ª–æ–≤):</b>\n"
        f"–û–ø–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã, —Å—Ç–∏–ª—å –∏ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞. –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–¥ –≤–∞—à—É –∞—É–¥–∏—Ç–æ—Ä–∏—é –∏ –∫–æ–Ω—Ç–µ–Ω—Ç."
    )
    
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=kb.main_button())
    await state.set_state(EditChannelState.waiting_for_channel_description)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞
@router.message(EditChannelState.waiting_for_channel_description)
async def process_channel_description(message: Message, state: FSMContext):
    new_description = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –æ–ø–∏—Å–∞–Ω–∏—è
    if len(new_description) > 700:
        await message.answer(
            "<b>‚ö†Ô∏è –°–õ–ò–®–ö–û–ú –û–ë–™–Å–ú–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï</b>\n\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ - 700 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            "<b>üí° –°–û–í–ï–¢ –û–¢ –≠–ö–°–ü–ï–†–¢–û–í:</b>\n"
            "–ö—Ä–∞—Ç–∫–∏–µ, –Ω–æ —ë–º–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ. –°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç AI –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.",
            parse_mode="HTML"
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await rq.update_chanel_description(message.from_user.id, new_description)
    
    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    await message.answer(
        "<b>‚úÖ –û–ü–ò–°–ê–ù–ò–ï –ö–ê–ù–ê–õ–ê –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–û!</b>\n\n"
        "<b>üéØ –ß–¢–û –≠–¢–û –ó–ù–ê–ß–ò–¢ –î–õ–Ø –í–ê–°:</b>\n"
        "‚Ä¢ AI —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–π —Ç–µ–º–∞—Ç–∏–∫–∏\n"
        "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å—Ç–∞–Ω—É—Ç –±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ –¥–ª—è –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏\n"
        "‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n\n"
        "<b>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b> –ö–∞–Ω–∞–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 50% –±–æ–ª—å—à–µ –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!",
        parse_mode="HTML",
        reply_markup=kb.main_button()
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"
@router.callback_query(F.data == "description_profile")
async def edit_profile_description(callback: CallbackQuery, state: FSMContext):
    user = await rq.get_user_data(callback.from_user.id)
    
    text = (
        f"<b>üë§ –°–û–ó–î–ê–ô–¢–ï –ü–†–ò–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–´–ô –ü–†–û–§–ò–õ–¨ –î–õ–Ø –ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ò–Ø</b>\n\n"
        f"<b>üìù –¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n"
        f"<i>{user.my_profile_description}</i>\n\n"
        f"<b>üî• –ü–û–ß–ï–ú–£ –≠–¢–û –í–ê–ñ–ù–û:</b>\n"
        f"‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ 35%\n"
        f"‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ —É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"
        f"‚Ä¢ –õ—é–¥–∏ –æ—Ö–æ—Ç–Ω–µ–µ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –ø–æ —Å—Å—ã–ª–∫–∞–º –æ—Ç –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n\n"
        f"<b>‚úèÔ∏è –í–í–ï–î–ò–¢–ï –ù–û–í–û–ï –û–ü–ò–°–ê–ù–ò–ï (–¥–æ 70 —Å–∏–º–≤–æ–ª–æ–≤):</b>\n"
        f"–≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∞–∫–∫–∞—É–Ω—Ç–∞, –æ—Ç –∏–º–µ–Ω–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±–æ—Ç –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –°–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –≤—ã–∑—ã–≤–∞—é—â–∏–º –¥–æ–≤–µ—Ä–∏–µ."
    )
    
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=kb.main_button())
    await state.set_state(EditChannelState.waiting_for_profile_description)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
@router.message(EditChannelState.waiting_for_profile_description)
async def process_profile_description(message: Message, state: FSMContext):
    new_description = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –æ–ø–∏—Å–∞–Ω–∏—è
    if len(new_description) > 70:
        await message.answer(
            "<b>‚ö†Ô∏è –°–õ–ò–®–ö–û–ú –î–õ–ò–ù–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï</b>\n\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ - 70 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            "<b>üí° –õ–ê–ô–§–•–ê–ö –î–õ–Ø –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò:</b>\n"
            "–í –∫–æ—Ä–æ—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º¬ª –∏–ª–∏ ¬´–õ–∏–¥–µ—Ä –º–Ω–µ–Ω–∏–π –≤ —Å—Ñ–µ—Ä–µ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞¬ª.",
            parse_mode="HTML"
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await rq.update_profile_description(message.from_user.id, new_description)
    
    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    await message.answer(
        "<b>‚úÖ –ü–†–û–§–ò–õ–¨ –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù!</b>\n\n"
        "<b>üöÄ –í–ê–® –ü–†–û–§–ò–õ–¨ –¢–ï–ü–ï–†–¨:</b>\n"
        "‚Ä¢ –í—ã–≥–ª—è–¥–∏—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ\n"
        "‚Ä¢ –ü–æ–≤—ã—à–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
        "‚Ä¢ –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤–∞—à–∏–º —Å—Å—ã–ª–∫–∞–º\n\n"
        "<b>üìà –†–ï–ó–£–õ–¨–¢–ê–¢:</b> –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–æ–∫ –¥–æ 40%! –≠—Ç–æ –∫–ª—é—á–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤–∞—à–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–æ—Å—Ç–∞.",
        parse_mode="HTML",
        reply_markup=kb.main_button()
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª"
@router.callback_query(F.data == "edit_link")
async def edit_link(callback: CallbackQuery, state: FSMContext):
    user = await rq.get_user_data(callback.from_user.id)
    
    text = (
        f"<b>üîó –ù–ê–°–¢–†–û–ô–ö–ê –°–°–´–õ–ö–ò –ù–ê –í–ê–® –ö–ê–ù–ê–õ</b>\n\n"
        f"<b>üåê –¢–µ–∫—É—â–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
        f"<i>{user.link}</i>\n\n"
        f"<b>üí∞ –ü–û–ß–ï–ú–£ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê = –ë–û–õ–¨–®–ï –ü–û–î–ü–ò–°–ß–ò–ö–û–í:</b>\n"
        f"‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –ø–µ—Ä–µ—Ö–æ–¥—ã –Ω–∞ 20%\n"
        f"‚Ä¢ –ó–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–≤—ã—à–∞—é—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞\n"
        f"‚Ä¢ –ö–∞–∂–¥—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –º–∏–∫—Ä–æ-—Ä–µ–∫–ª–∞–º–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è\n\n"
        f"<b>‚úèÔ∏è –í–í–ï–î–ò–¢–ï –ù–û–í–£–Æ –°–°–´–õ–ö–£:</b>\n"
        f"–§–æ—Ä–º–∞—Ç: t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞\n\n"
        f"<b>üí° –°–û–í–ï–¢:</b> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ - —ç—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏."
    )
    
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=kb.main_button())
    await state.set_state(EditChannelState.waiting_for_link_update)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
@router.message(EditChannelState.waiting_for_link_update)
async def process_link_update(message: Message, state: FSMContext):
    new_link = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏
    if len(new_link) > 35:
        await message.answer(
            "<b>‚ö†Ô∏è –°–õ–ò–®–ö–û–ú –î–õ–ò–ù–ù–ê–Ø –°–°–´–õ–ö–ê!</b>\n\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ - 35 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            "<b>üí° –°–ï–ö–†–ï–¢ –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò:</b>\n"
            "–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –ª–µ–≥—á–µ –∑–∞–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –∏ –≤—ã–∑—ã–≤–∞—é—Ç –Ω–∞ 25% –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ü–∏—Ñ—Ä.",
            parse_mode="HTML"
        )
        return
    
    if not (new_link.startswith("t.me/") or new_link.startswith("https://t.me/") or new_link.startswith("@")):
        await message.answer(
            "<b>‚ö†Ô∏è –ù–ï–í–ï–†–ù–´–ô –§–û–†–ú–ê–¢ –°–°–´–õ–ö–ò</b>\n\n"
            "<b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤:</b>\n"
            "‚Ä¢ t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º)\n"
            "‚Ä¢ https://t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞\n"
            "‚Ä¢ @–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞\n\n"
            "<b>üí° –ú–ê–†–ö–ï–¢–ò–ù–ì–û–í–´–ô –•–ê–ö:</b>\n"
            "–§–æ—Ä–º–∞—Ç t.me/–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ 35% –ª—É—á—à—É—é –∫–æ–Ω–≤–µ—Ä—Å–∏—é –≤ –ø–µ—Ä–µ—Ö–æ–¥—ã, —á–µ–º –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã!",
            parse_mode="HTML"
        )
        return
    
    # –ü—Ä–∏–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @
    if new_link.startswith("@"):
        new_link = "t.me/" + new_link[1:]
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    success = await rq.add_link(message.from_user.id, new_link)
    
    if success:
        # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        await message.answer(
            "<b>‚úÖ –°–°–´–õ–ö–ê –ù–ê –ö–ê–ù–ê–õ –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–ê!</b>\n\n"
            "<b>üöÄ –ß–¢–û –ü–†–û–ò–°–•–û–î–ò–¢ –î–ê–õ–¨–®–ï:</b>\n"
            "‚Ä¢ –í—Å–µ –Ω–æ–≤—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±—É–¥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–∞—à—É –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É\n"
            "‚Ä¢ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ —É–≤–∏–¥—è—Ç –ø—Ä—è–º–æ–π –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
            "‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n\n"
            "<b>üìä –ò–ù–¢–ï–†–ï–°–ù–´–ô –§–ê–ö–¢:</b> –ü—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ 45% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏.",
            parse_mode="HTML",
            reply_markup=kb.main_button()
        )
    else:
        await message.answer(
            "<b>‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –û–ë–ù–û–í–ò–¢–¨ –°–°–´–õ–ö–£</b>\n\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–∞ —Å—Å—ã–ª–∫–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
            "<b>üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:</b>\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–µ–º—É –æ—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç.",
            parse_mode="HTML",
            reply_markup=kb.main_button()
        )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
@router.callback_query(F.data == "launch_bot")
async def handle_launch_bot(callback: CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await rq.get_user_data(callback.from_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –ø–æ–¥–ø–∏—Å–∫–∏ (1 = –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è/—Ç–µ—Å—Ç–æ–≤–∞—è)
    if user.sub_id == 1:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ - –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
        await callback.message.edit_text(
            "<b>üöÄ –ò–°–ü–´–¢–ê–ô–¢–ï –°–ò–õ–£ –ù–ï–ô–†–û–ö–û–ú–ú–ï–ù–¢–ò–ù–ì–ê –ë–ï–°–ü–õ–ê–¢–ù–û!</b>\n\n"
            "<b>üë®‚Äçüíª –ß–¢–û –í–´ –ü–û–õ–£–ß–ò–¢–ï –í –¢–ï–°–¢–û–í–û–ú –†–ï–ñ–ò–ú–ï:</b>\n"
            "‚Ä¢ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É\n"
            "‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n\n"
            "<b>üìä –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢:</b>\n"
            "1. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –ª—é–±–æ–π –ø–æ—Å—Ç\n"
            "2. AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Å–æ–∑–¥–∞—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
            "3. –í—ã —É–≤–∏–¥–∏—Ç–µ, –∫–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ\n\n"
            "<b>‚ö†Ô∏è –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø –ë–ï–°–ü–õ–ê–¢–ù–û–ô –í–ï–†–°–ò–ò:</b>\n"
            "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n"
            "‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–º–∏\n"
            "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É–≤–∏–¥–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã\n\n"
            "<b>üî• –§–ê–ö–¢:</b> –ù–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫–∞–Ω–∞–ª–∞—Ö –Ω–∞ 200-300% –±–ª–∞–≥–æ–¥–∞—Ä—è —É–º–Ω—ã–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º!",
            parse_mode="HTML",
            reply_markup=kb.launch_bot_test_keyboard()
        )
    else:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        channels = await rq.get_chanels(callback.from_user.id)
        
        if not channels:
            # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö
            await callback.message.edit_text(
                "<b>üì∫ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</b>\n\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –¥–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å.",
                parse_mode="HTML",
                reply_markup=kb.main_keyboard_2()
            )
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
            channels_text = "<b>üì∫ –í–∞—à–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:</b>\n\n"
            for i, channel in enumerate(channels, 1):
                channels_text += f"{i}. {channel}\n"
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã", callback_data="check_channels")],
                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home_page")]
            ])
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–Ω–∞–ª–∞–º–∏
            await callback.message.edit_text(
                channels_text,
                parse_mode="HTML",
                reply_markup=keyboard
            )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
@router.callback_query(F.data == "stop_bot")
async def handle_stop_bot(callback: CallbackQuery):
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop_bot –≤ –º–æ–¥—É–ª–µ neiro_handlers.py
    await callback.message.edit_text(
        "<b>‚èπ –ü–†–ò–û–°–¢–ê–ù–û–í–ö–ê –†–ê–ë–û–¢–´ –°–ò–°–¢–ï–ú–´</b>\n\n"
        "<b>‚öôÔ∏è –ü–†–û–¶–ï–°–°:</b>\n"
        "‚Ä¢ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "‚Ä¢ –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏\n\n"
        "<b>‚åõ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</b>",
        parse_mode="HTML"
    )
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /stop_bot
    from app.neiro.neiro_handlers import stop_bot
    message = callback.message
    message.from_user = callback.from_user
    await stop_bot(message)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await callback.message.answer(
        "<b>‚úÖ –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –û–°–¢–ê–ù–û–í–õ–ï–ù–ê</b>\n\n"
        "<b>üìä –°–¢–ê–¢–£–° –í–ê–®–ï–ì–û –ê–ö–ö–ê–£–ù–¢–ê:</b>\n"
        "‚Ä¢ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫–∞–Ω–∞–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
        "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç\n\n"
        "<b>üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø –≠–ö–°–ü–ï–†–¢–ê:</b>\n"
        "–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –º–µ–Ω–µ–µ 14 –¥–Ω–µ–π. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏.",
        parse_mode="HTML",
        reply_markup=kb.home_page()
    )

@router.callback_query(F.data == "check_channels")
async def handle_check_channels(callback: CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    channels = await rq.get_chanels(callback.from_user.id)
    
    if not channels:
        await callback.message.edit_text(
            "<b>‚ùå –û—à–∏–±–∫–∞</b>\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
            parse_mode="HTML",
            reply_markup=kb.main_keyboard_2()
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    await callback.message.edit_text(
        "<b>üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–Ω–∞–ª–æ–≤...</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –º—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã.",
        parse_mode="HTML"
    )
    
    # TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–æ–≤
    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
    await asyncio.sleep(2)  # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    await callback.message.edit_text(
        "<b>‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n\n"
        "–í—Å–µ –∫–∞–Ω–∞–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–æ–º.",
        parse_mode="HTML",
        reply_markup=kb.main_keyboard_2()
    )



