from telethon import TelegramClient
import asyncio
import app.database.requests as rq
import os

async def create_session(id: int):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        bot_data = await rq.get_bot_data_for_id(id)
        if not bot_data:
            print(f"‚ùå –ë–æ—Ç —Å ID {id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not hasattr(bot_data, 'api_id') or not hasattr(bot_data, 'hash_id') or not hasattr(bot_data, 'link_bot'):
            print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–æ—Ç–∞")
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {bot_data}")
            return

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É session, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists('session'):
            os.makedirs('session')

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ —Å –ø—É—Ç–µ–º –∫ –ø–∞–ø–∫–µ session
        session_name = os.path.join('session', f"session_{id}_{bot_data.link_bot}")
        
        print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –±–æ—Ç–∞:")
        print(f"‚Ä¢ ID –±–æ—Ç–∞: {id}")
        print(f"‚Ä¢ API ID: {bot_data.api_id}")
        print(f"‚Ä¢ Hash ID: {bot_data.hash_id}")
        print(f"‚Ä¢ –°—Å—ã–ª–∫–∞: {bot_data.link_bot}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramClient(
            session_name,
            bot_data.api_id,
            bot_data.hash_id
        )

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
        await client.connect()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if client.is_connected():
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
            return

        print(f"‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞: {session_name}.session")
        print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: {bot_data.link_bot}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        await client.disconnect()
        
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ:")
        print("1. ID –±–æ—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("2. –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ (api_id, hash_id, link_bot)")
        print("3. –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –∏ –Ω–µ –ø—É—Å—Ç—ã–µ")
        print("4. API ID –∏ Hash ID —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω–æ–º—É –±–æ—Ç—É")

async def main():
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –±–æ—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot_id = input("–í–≤–µ–¥–∏—Ç–µ ID –±–æ—Ç–∞: ")
    
    try:
        bot_id = int(bot_id)
    except ValueError:
        print("‚ùå ID –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    await create_session(bot_id)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    asyncio.run(main()) 